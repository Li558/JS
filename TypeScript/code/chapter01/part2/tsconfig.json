{
    /*
    tsconfig.json 是ts编译器的配置文件， ts编译器可以根据它的信息来对代码进行编译
        "include" 用来指定哪些ts文件需要被编译
        路径：** 表示任意目录
              * 表示任意文件
        "exclude" 不需要被编译的文件目录
    */
    "include": [
        "./src/**/*"
    ],
    // "exclude": [
    //     "./hello/**/*"
    // ]
    /*
        compilerOptions 编译器的选项
        'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 
        'es2018', 'es2019', 'es2020', 'es2021', 'esnext'
        */
    "compilerOptions": {
        //target 用来指定被编译为ES的版本
        "target": "es2015",

        //module 指定要使用的模块化规范
        //'none', 'commonjs' 'amd', 'system', 'umd', 'es6', 
        //'es2015', 'es2020', 'es2022', 'esnext', 'node12', 'nodenext',
        "module": "system",

        //lib用来指定项目钟要使用的库
        /*
        'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 
        'es2021', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 
        'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 
        'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 
        'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 
        'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 
        'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 
        'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.promise', 
        'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl', 
        'es2021.promise', 'es2021.string', 'es2021.weakref', 'es2021.intl', 'esnext.array', 
        'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string',
         'esnext.promise', 'esnext.weakref
        */
        "lib": ["es2015", "dom"],
        //outDir 用来指定编译后文件所在的目录
        "outDir": "./dist",
        //outFile 将代码合并为一个文件
        // "outFile": "./dist/app.js",

        //是否对js文件进行编译， 默认是false
        "allowJs": true,

        //是否检查js代码是否符合语法规范 默认false
        "checkJs": true,

        //是否移除注释
        "removeComments": true,

        //不生成编译后的文件
        "noEmit": false,

        //所有严格检查的总开关
        "strict": true,

        //不生成编译文件 当有错误时
        "noEmitOnError": true,

        //用来设置编译后的文件是否使用严格模式 false
        "alwaysStrict": true,

        //不允许隐式的any
        "noImplicitAny": true,

        //不允许不明确类型的this
        "noImplicitThis": true,

        //严格检查空值
        "strictNullChecks": true
        
        
        
    }
    
}